name: Sync, Build, and Deploy

on:
  push:
    branches:
      - main  # Runs on push to main branch
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  sync_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          # git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.email "micheal.l.c.kinney@gmail.com"
          
      # Step 2: Push Changes to Fork
      - name: Push Changes to Fork
        env:
          API_KEY: ${{ secrets.TESTING }}
        run: |
          # Add any changes
          echo "1.0.1" > VERSION
          git add .
          git commit -m "Automated Commit"
          
          # Push changes to the repository using API_KEY for authentication
          # git remote set-url origin https://$API_KEY@github.com/${{ github.repository }}.git
          git remote set-url origin https://${{ secrets.TESTING }}@github.com/${{ github.repository }}.git
          git push origin main

      # Step 3: Merges upstream changes (if any)
      - name: Add Upstream
        run: |
          git remote add upstream https://github.com/coleam00/bolt.new-any-llm
          git fetch upstream
          git merge upstream/main --allow-unrelated-histories -m "Merge upstream changes" || echo "Merge conflict detected or no changes"

      # Step 4: Push changes to your fork
      - name: Push Changes to Fork
        run: |
          git push origin main

      # Step 5: Install dependencies using pnpm
      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      # Step 6: Build the project (using whatever build tool, like Vite, Remix)
      - name: Build project
        run: |
          pnpm run build

      # Step 7: Deploy to Cloudflare Pages
      - name: Deploy to Cloudflare Pages
        run: |
          echo "Deploying to Cloudflare Pages..."
